参考：https://www.cnblogs.com/crime/p/11025823.html
## django-allauth 常见设置选项
```
# 要求用户注册时必须填写email
ACCOUNT_EMAIL_REQUIRED = True 
# 注册中邮件验证方法: "强制(mandatory)"、 "可选(optional)" 或 "否(none)" 之一
(注册成功后，会发送一封验证邮件，用户必须验证邮箱后，才能登陆)
ACCOUNT_EMAIL_VERIFICATION (="optional") 
# 作用于第三方账号的注册
SOCIALACCOUNT_EMAIL_VERIFICATION = 'optional' / 'mandatory' / 'none'
# 邮件发送后的冷却时间(以秒为单位)
ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN (=180) 
# 邮箱确认邮件的截止日期(天数)
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS (=3) 

# 指定要使用的登录方法(用户名、电子邮件地址或两者之一)
ACCOUNT_AUTHENTICATION_METHOD (="username" | "email" | "username_email") 
# 登录尝试失败的次数
ACCOUNT_LOGIN_ATTEMPTS_LIMIT (=5) 
# 从上次失败的登录尝试，用户被禁止尝试登录的持续时间
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT (=300) 
# 更改为True，用户一旦确认他们的电子邮件地址，就会自动登录
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION (=False) 

# 更改或设置密码后是否自动退出
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE (=False) 
# 更改为True，用户将在重置密码后自动登录
ACCOUNT_LOGIN_ON_PASSWORD_RESET (=False) 
# 控制会话的生命周期，可选项还有: "False" 和 "True"
ACCOUNT_SESSION_REMEMBER (=None) 

# 用户注册时是否需要输入邮箱两遍
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE (=False) 
# 用户注册时是否需要用户输入两遍密码
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE (=True) 
# 用户不能使用的用户名列表
ACCOUNT_USERNAME_BLACKLIST (=[]) 
# 加强电子邮件地址的唯一性
ACCOUNT_UNIQUE_EMAIL (=True) 
# 用户名允许的最小长度的整数
ACCOUNT_USERNAME_MIN_LENGTH (=1) 
# 使用从社交账号提供者检索的字段(如用户名、邮件)来绕过注册表单
SOCIALACCOUNT_AUTO_SIGNUP (=True) 

# 设置登录后跳转链接
LOGIN_REDIRECT_URL (="/") 
# 设置退出登录后跳转链接
ACCOUNT_LOGOUT_REDIRECT_URL (="/")
# 用户登出是否需要确认确认(True表示直接退出，不用确认；False表示需要确认)
ACCOUNT_LOGOUT_ON_GET (=True)
```
# docker测试
## 删除镜像
```shell
# 启动所有镜像
sudo docker start $(sudo docker ps -a -q)

# stop停止所有容器
sudo docker stop $(sudo docker ps -a -q)

# remove删除所有容器
sudo docker rm $(sudo docker ps -a -q)

# docker中 删除所有的镜像
sudo docker rmi $(sudo docker images | awk '{print $3}' |tail -n +2)
```

## docker镜像
```angular2html
sudo docker run -it --name python3.7 python:3.7 bash
sudo docker cp /share/firm/ ee5571ba4d5a:/home
```
django运行命令
```shell
python manage.py runserver 0.0.0.0:5000
```

- 升级django版本2.0到2.1.5

- 完成注册登录界面美化

- 完成github第三方登录，微信登录待完善

- update layui版本到2.7.6
- 完成order app 基本功能
- 完成admin后台order退款手动核查
- 完成logging配置
- 完成邮箱发送功能
